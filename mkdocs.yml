---
# Practicalli Clojure
site_name: Practicalli Learn Clojure
site_url: https://practical.li/learn-clojure
site_description: Practical guide to learning the Clojure programming language and Clojure REPL development workflow
site_author: Practicalli
site_org: https://practical.li
copyright: Copyright &copy 2023  Practicali <a href="https://creativecommons.org/licenses/by-sa/4.0/">CC BY-SA 4.0</a>
repo_url: https://github.com/practicalli/learn-clojure/
edit_uri: https://github.com/practicalli/learn-clojure/edit/main/docs/

# Deployment
# remote_name: origin
remote_branch: gh-pages # deployment branch

# Theme and styling
theme:
  name: material
  logo: assets/images/practicalli-logo.png
  favicon: assets/favicon.svg
  features:
    - announce.dismiss
    - content.action.edit
    - content.action.view
    - content.code.annotate
    - content.code.copy
    - content.tabs.link
    - navigation.footer
    - navigation.indexes # Nav sections can have files
    - navigation.instant # Avoid page reloading for internal links
    - navigation.top
    - navigation.tracking # Update URL with anchor
  palette:
    # Palette toggle for light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      primary: blue
      accent: teal
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode

    # Palette toggle for dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      primary: blue
      accent: teal
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
  # Override theme
  custom_dir: overrides

extra_css:
  - assets/stylesheets/extra.css

## Additional styling
markdown_extensions:
  - admonition
  - pymdownx.details
  - pymdownx.superfences
  - attr_list
  - md_in_html # Grids
  - footnotes # footnotes and abbreviations
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets:
      url_download: true
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.keys # keyboard keys
  - pymdownx.magiclink
  - def_list # lists
  - pymdownx.tasklist:
      custom_checkbox: true # checkboxes
  - toc:
      permalink: λ︎

## Plugins
plugins:
  # Explicitly add search plugin when defining plugins in this configuration file
  - search
  - callouts
  - glightbox # Image aligning
  - git-revision-date-localized: # Update and Creation date of each page
      # enable_creation_date: true
      fallback_to_build_date: true

  # Generate Social Cards via CI only
  # in assets/images/social
  - social:
      cards: !ENV [MKDOCS_SOCIAL_CARDS_GENERATE, true]

  # Redirect pages when moved or changed
  # - redirects:
  #     redirect_maps:

  # Footer / Social Media
extra:
  analytics:
    provider: google
    property: G-CNB2J6KFDE
  social:
    - icon: material/web
      link: https://practical.li/
    - icon: fontawesome/brands/linkedin
      link: https://www.linkedin.com/in/jr0cket/
    - icon: fontawesome/brands/slack
      link: https://clojurians.slack.com/messages/practicalli
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/practical_li
    - icon: fontawesome/brands/github
      link: https://github.com/practicalli
    - icon: fontawesome/brands/docker
      link: https://hub.docker.com/u/practicalli

# Navigation
nav:
  - Introduction:
      - index.md
      - Learning Path: introduction/learning-path.md
      - Clojure in Fifteen Mins: introduction/clojure-in-15-minutes.md
      - REPL Workflow: introduction/repl-workflow.md
      - Concepts:
          - introduction/concepts/index.md
          - Functional vs Imperative: introduction/concepts/what-is-functional-programming.md
          - From The Author: introduction/concepts/clojure-from-the-author.md
      - Who Uses Clojure: introduction/who-uses-clojure.md
      - Clojure Community: introduction/clojure-community.md
      - Contributing: introduction/contributing.md
      - Writing Tips: introduction/writing-tips.md
  - Clojure REPL:
      - clojure-repl/index.md
  - First Steps:
      - first-steps/index.md
      - Hello World: first-steps/hello-world.md
      - Maths: first-steps/maths.md
      - Name association: first-steps/name-association.md
      - Functions: first-steps/functions.md
      - Projects: first-steps/projects.md
      - Date-Time: first-steps/date-time.md
  - Code Challenges:
      - code-challenges/index.md
      - 4 Ever Clojure:
          - code-challenges/4ever-clojure/index.md
      - Exercism:
          - code-challenges/exercism/index.md
          - RNA Transcription: code-challenges/exercism/rna-transcription.md
          - Nucleotide Count: code-challenges/exercism/nucleotide-count.md
          - code-challenges/exercism/hamming.md
          - code-challenges/exercism/space-age.md
          - Bob:
              - code-challenges/exercism/bob/index.md
              - code-challenges/exercism/bob/bob-string-approach.md
              - code-challenges/exercism/bob/bob-regular-expression-approach.md
      - CodeWars: code-challenges/codewars/index.md
      - Advent Of Code: code-challenges/advent-of-code.md

  - Code Kata:
      - code-kata/index.md
      - Recent Song list: code-kata/recent-song-list.md
      - Salary Slip Generator: code-kata/salary-slip-generator.md
      - Split Bill: code-kata/split-the-bill.md
      - Tripple Lock: code-kata/tripple-lock.md
  - Small projects:
      - small-projects/index.md
      - Random Function: small-projects/random-clojure-function.md
      - Tripple Lock: small-projects/tripple-lock.md
      # - Salary Calculator: small-projects/salary-calculator.md
      # - small-projects/generate-web-page.md
      - Encoder Decode:
          - small-projects/encode-decode/index.md
          - small-projects/encode-decode/convert-boolean-values.md
          - small-projects/encode-decode/caesar-cipher-rot13.md
          - small-projects/encode-decode/rna-dna.md
          - small-projects/encode-decode/clacks.md
      - Data Transform:
          - small-projects/data-transformation/index.md
          - small-projects/data-transformation/most-common-word.md
      - Mutating State:
          - small-projects/mutating-state/index.md
          - small-projects/mutating-state/mutants-assemble.md
  - Games:
      - games/index.md
      # Convert to deps.edn
      - TicTacToe:
          - games/tictactoe-cli/index.md

  - Clojure Design:
      - clojure-design/index.md
      - Idioms: clojure-design/idioms.md
      - Naming: clojure-design/naming.md

  - Thinking Functionally:
      - thinking-functionally/index.md
      - thinking-functionally/side-effects.md
      - thinking-functionally/pure-functions.md
      - thinking-functionally/impure-functions.md
      - thinking-functionally/first-class-functions.md
      - thinking-functionally/homoiconicity.md
      - thinking-functionally/function-composition.md
      - thinking-functionally/example-hitchhikers-guide.md
      # <!-- TODO - thinking-functionally/iterate-over-values.md -->
      - thinking-functionally/higher-order-functions.md
      - thinking-functionally/immutability.md
      - thinking-functionally/immutable-values.md
      - thinking-functionally/immutable-collections.md
      - thinking-functionally/immutable-local-bindings.md
      - thinking-functionally/partial-functions.md
      - thinking-functionally/map-with-partial.md
      - thinking-functionally/list-comprehension.md
      # <!-- - thinking-functionally/lazy-evaluation.md -->
      - thinking-functionally/sequences.md
      - sequence-abstractions.md
      - thinking-functionally/functors.md
      - thinking-functionally/arity.md
      - thinking-functionally/pattern-matching.md
      - thinking-functionally/polymorphism.md
      - thinking-functionally/recursion.md
      - thinking-functionally/recursion-polymorphism.md
      - thinking-functionally/tail-recursion.md

  - Reference:
      - reference/index.md
      - quickstart/quick-reference.md
      - Clojure CLI:
          - reference/clojure-cli/index.md
          # <!-- - [deps.edn aliases](clojure-cli/configure/deps-edn-aliases.md) -->
          - reference/clojure-cli/defining-aliases.md
          - reference/clojure-cli/example-alias-definitions.md
          - reference/clojure-cli/jvm-options.md
          # - clojure-cli/configure/common-tasks.md
          # - clojure-cli/configure/defining-aliases.md
      - Standard Library:
          - reference/standard-library/index.md
          - reference/standard-library/destructuring.md
          - reference/standard-library/predicate-functions.md
          - Regular Expressions:
              - reference/standard-library/regular-expressions/index.md
              - reference/standard-library/regular-expressions/matching-with-groups.md
              - reference/standard-library/regular-expressions/matching-sub-strings.md
              - reference/standard-library/regular-expressions/matching-sub-sequences.md
              - reference/standard-library/regular-expressions/common-regex-patterns.md
              - reference/standard-library/regular-expressions/string-replace-with-regex.md
              - reference/standard-library/regular-expressions/string-split-with-regex.md
              - reference/standard-library/regular-expressions/sub-expression-matches.md
          - reference/standard-library/cond-thread-macro.md
      - Java:
          - reference/clojure-syntax/java-interop.md
          - More Java fun: reference/clojure-syntax/more-java-fun.md

      # Move syntax into a reference section and use projects to expose audience to Clojure syntax
      # Basic syntax and calling functions
      - Clojure Syntax:
          - reference/clojure-syntax/syntax.md
          - reference/clojure-syntax/parenthesis.md
          - reference/clojure-syntax/code-documentation.md
          - reference/clojure-syntax/comments.md
          - reference/clojure-syntax/strings.md
          - reference/clojure-syntax/numbers-maths.md
          - reference/clojure-syntax/ratios.md
          - reference/clojure-syntax/control-flow.md
          - reference/doc-and-source-functions.md
          - reference/clojure-syntax/assigning-names.md
          - reference/clojure-syntax/naming.md
          - reference/kebab-case.md
          - reference/threading-macros.md
          - reference/tagged-literals/index.md
          - reference/tagged-literals/uuid.md
      # Persistent data structures list vector map set -->
      - Data Structures:
          - data-structures/index.md
          - data-structures/list.md
          - data-structures/hash-maps/index.md
          - data-structures/hash-maps/create.md
          - data-structures/hash-maps/access.md
          # - data-structures/hash-maps/update.md
          - data-structures/vector.md
          - data-structures/set.md
          - data-structures/naming.md
          - data-structures/shared-memory.md
          - Pretty Printing: data-structures/pretty-printing.md
          - Using Data Structures:
              - using-data-structures/index.md
              - using-data-structures/sequences.md
              - using-data-structures/lazy-sequences.md
              - using-data-structures/destructuring.md
              - using-data-structures/applying-functions.md
              - using-data-structures/mapping-data-structures.md
          - Modifying:
              - modifying-data-structures/index.md
              - modifying-data-structures/lists.md
              - modifying-data-structures/maps.md
              - modifying-data-structures/vectors.md
              - modifying-data-structures/sets.md
          - iterate-over-data/index.md
          - iterate-over-data/map.md
          - iterate-over-data/map-partial.md
          - iterate-over-data/map-fn.md
          - iterate-over-data/filter-remove.md
          - iterate-over-data/apply.md
          - iterate-over-data/reduce.md
          - iterate-over-data/reduce.md
          - iterate-over-data/reduce.md
          - Design:
              - designing-data-structures/index.md
              - designing-data-structures/with-vectors.md
              - designing-data-structures/with-vectors-of-vectors.md
              - designing-data-structures/with-maps.md
              - designing-data-structures/with-maps-of-maps.md
              - designing-data-structures/with-vectors-of-maps.md
              - designing-data-structures/modeling-alphabet-codes.md
              - designing-data-structures/modeling-name-generation-map.md
      - Crreative Coding:
          - reference/creative-coding/index.md
          - SVG:
              - reference/clojure-svg/index.md
      - JVM:
          - reference/jvm/index.md
          - reference/jvm/understanding-memory-usage.md
          - reference/jvm/common-options.md
          - reference/jvm/java-17-flags.md
          - reference/jvm/experimental-options.md
          - Profile tools: reference/jvm/profile-tools.md
          - reference/performance/index.md
      - Alternative Tools:
          - alternative-tools/index.md
          - alternative-tools/clojure-cli/basic-repl.md
          - alternative-tools/clojure-cli/compare-with-leiningen.md
          # - alternative-tools/data-inspector/reveal.md
          - alternative-tools/clojure-cli/evaluate-an-expression.md
          - alternative-tools/clojure-cli/set-namespace-on-repl-startup.md
          - alternative-tools/leiningen/index.md
